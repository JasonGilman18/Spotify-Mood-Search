{"version":3,"sources":["ranked-item/img/music-album.png","ranked-item/ranked-item.jsx","slider/slider.jsx","app/app.jsx","index.jsx"],"names":["RankedItem","props","state","img","altAlbum","expandedView","expand","bind","id","this","type","item","albumID","artistID","fetch","then","response","blob","image","item_image","URL","createObjectURL","setState","temp","onClick","className","src","alt","songName","artistName","songID","frameBorder","allow","albumName","Component","Slider","value","newProp","leftLabel","rightLabel","min","max","step","onChange","e","index","App","searching","ranked_songs","ranked_artists","ranked_albums","values","search","handleSlider","getRankVals","user_prefs","res","json","slider1_val","slider2_val","slider3_val","slider4_val","i","tempValues","target","Spinner","animation","map","song","length","artist","album","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea77dd66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/music-album.42de4a28.png\";","import React, { Component } from 'react';\r\nimport altAlbum from './img/music-album.png';\r\nimport './ranked-item.css'\r\n\r\n\r\nclass RankedItem extends Component {\r\n\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {img: altAlbum, expandedView: false}\r\n        this.expand = this.expand.bind(this);\r\n    }\r\n\r\n    \r\n    async componentDidMount()\r\n    {\r\n        var id = \"\"\r\n        if(this.props.type === \"song\")\r\n            id = this.props.item.albumID\r\n        else if(this.props.type === \"artist\")\r\n            id = this.props.item.artistID\r\n        else\r\n            id = this.props.item.albumID\r\n\r\n        var item_image;\r\n        await fetch('https://spotify-mood-search.herokuapp.com/img/' + id).then(response => response.blob()).then(image => {item_image = URL.createObjectURL(image)});\r\n        this.setState({img: item_image});\r\n    }\r\n\r\n\r\n    expand()\r\n    {\r\n        var temp = !this.state.expandedView;\r\n        this.setState({expandedView: temp});\r\n    }\r\n    \r\n\r\n    render()\r\n    {\r\n\r\n        if(this.props.type === \"song\")\r\n        {\r\n            if(this.state.expandedView)\r\n            {\r\n                return(\r\n                    \r\n                    <div onClick={this.expand} className={this.props.className + \" expandedSong\"}>\r\n                        <img src={this.state.img} alt=\"\" className=\"itemPicture\"></img>\r\n                        <div  className=\"partition\"></div>\r\n                        <div className=\"itemContent\">\r\n                            <p>\r\n                                {this.props.item.songName}\r\n                            </p>\r\n                            <p>\r\n                                By {this.props.item.artistName}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"secondPartition\"></div>\r\n                        <iframe className=\"spotifySongPlayer\" src={\"https://open.spotify.com/embed/track/\" + this.props.item.songID} frameBorder=\"0\" allow=\"encrypted-media\"></iframe>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                    \r\n                    <div onClick={this.expand} className={this.props.className}>\r\n                        <img src={this.state.img} alt=\"\" className=\"itemPicture\"></img>\r\n                        <div  className=\"partition\"></div>\r\n                        <div className=\"itemContent\">\r\n                            <p>\r\n                                {this.props.item.songName}\r\n                            </p>\r\n                            <p>\r\n                                By {this.props.item.artistName}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                );                \r\n            }\r\n        }\r\n        else if(this.props.type === \"artist\")\r\n        {\r\n            if(this.state.expandedView)\r\n            {\r\n                return(\r\n                    \r\n                    <div onClick={this.expand} className={this.props.className + \" expandedArtist\"}>\r\n                        <img src={this.state.img} alt=\"\" className=\"itemPicture\"></img>\r\n                        <div className=\"partition\"></div>\r\n                        <div className=\"itemContent\">\r\n                            <p>\r\n                                {this.props.item.artistName}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"secondPartition\"></div>\r\n                        <iframe className=\"spotifyArtistPlayer\" src={\"https://open.spotify.com/embed/artist/\" + this.props.item.artistID} frameBorder=\"0\" allow=\"encrypted-media\"></iframe>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                    \r\n                    <div onClick={this.expand} className={this.props.className}>\r\n                        <img src={this.state.img} alt=\"\" className=\"itemPicture\"></img>\r\n                        <div className=\"partition\"></div>\r\n                        <div className=\"itemContent\">\r\n                            <p>\r\n                                {this.props.item.artistName}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                );                \r\n            }                        \r\n        }\r\n        else\r\n        {\r\n            if(this.state.expandedView)\r\n            {\r\n                return(\r\n\r\n                    <div onClick={this.expand} className={this.props.className + \" expandedArtist\"}>\r\n                        <img src={this.state.img} alt=\"\" className=\"itemPicture\"></img>\r\n                        <div className=\"partition\"></div>\r\n                        <div className=\"itemContent\">\r\n                            <p>\r\n                                {this.props.item.albumName}\r\n                            </p>\r\n                            <p>\r\n                                By {this.props.item.artistName}\r\n                            </p>\r\n                        </div>\r\n                        <div className={this.state.expandedView ? \"secondPartition\" : \"hidden\"}></div>\r\n                        <iframe className=\"spotifyArtistPlayer\" src={\"https://open.spotify.com/embed/album/\" + this.props.item.albumID} frameBorder=\"0\" allow=\"encrypted-media\"></iframe>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            {\r\n                return(\r\n\r\n                    <div onClick={this.expand} className={this.props.className}>\r\n                        <img src={this.state.img} alt=\"\" className=\"itemPicture\"></img>\r\n                        <div className=\"partition\"></div>\r\n                        <div className=\"itemContent\">\r\n                            <p>\r\n                                {this.props.item.albumName}\r\n                            </p>\r\n                            <p>\r\n                                By {this.props.item.artistName}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                );                \r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default RankedItem","import React, { Component } from 'react';\r\nimport './slider.css'\r\n\r\n\r\nclass Slider extends Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {value: this.props.value};\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(newProp)\r\n    {\r\n        this.setState({value: newProp.value});\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n\r\n            <div className=\"sliderContainer\">\r\n                <div className=\"sliderLabels\">\r\n                    <h4 className=\"label\">{this.props.leftLabel}</h4>\r\n                    <h4 className=\"label\">{this.props.rightLabel}</h4>\r\n                </div>\r\n                <input className=\"slider\" type=\"range\" min=\"0\" max=\"1\" step=\".001\" onChange={(e) => this.props.onChange(e, this.props.index)} value={this.state.value}></input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Slider;","import React, { Component } from 'react';\r\nimport RankedItem from './../ranked-item/ranked-item.jsx';\r\nimport Slider from './../slider/slider.jsx';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './app.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {searching: false, ranked_songs: [], ranked_artists: [], ranked_albums: [], values: [.500, .500, .500, .500]};\r\n        this.search = this.search.bind(this);\r\n        this.handleSlider = this.handleSlider.bind(this);\r\n        this.getRankVals = this.getRankVals.bind(this);\r\n    }\r\n\r\n\r\n    async search(e)\r\n    {\r\n        this.setState({searching: true});\r\n\r\n        var user_prefs = this.getRankVals();\r\n        const response = await fetch('https://spotify-mood-search.herokuapp.com/rank' + user_prefs).then(res => res.json());\r\n        this.setState({searching: false, ranked_songs: response[\"ranked_songs\"], ranked_artists: response[\"ranked_artists\"], ranked_albums: response[\"ranked_albums\"]});\r\n    }\r\n\r\n\r\n    getRankVals()\r\n    {\r\n        //assign value to each of these spotify stats\r\n        var acousticness = 0.0;       //rating of how acoustic a song sounds\r\n        var danceability = 0.0;       //how suitable a track is for dancing\r\n        var energy = 0.0;             //measure of intensity and activeness\r\n        var instrumentalness = 0.0;   //prediction of no vocals in a song. 1.0 means 100% sure no vocals in the song\r\n        var liveness = 0.0;           //detects the presence of the audience in the song\r\n        var speechiness = 0.0;        //detects the presence of spoken words in the song\r\n        var valence = 0.0;            //rating of positivity. positiveness is 1.0  while negativeness is 0.0\r\n        \r\n\r\n        //this is the values of the sliders\r\n        var slider1_val = this.state.values[0];\r\n        var slider2_val = this.state.values[1];\r\n        var slider3_val = this.state.values[2];\r\n        var slider4_val = this.state.values[3];\r\n\r\n\r\n        //slider 1 = somber -> cheerful  (valence, danceability -> valence, danceability)\r\n        //slider 2 = peaceful -> excited (acousticness, energy -> energy, danceability)\r\n        //slider 3 = bored -> busy (speechiness -> insturmentalness)\r\n        //slider 4 = conscious -> natural (liveness -> liveness, acousticness)\r\n\r\n\r\n        acousticness = (1-slider2_val)*.5 + slider4_val*.5; //(1-slider2_val) beacuse if slider is .1 that means its very relaxed==acoustic so you want to weight it high eg. 1-.2 = .8 \r\n        danceability = slider1_val*.3 + slider2_val*.7;     //.3 and .7 is the weighting between somber->cheerful and peaceful->excited in measuring danceability\r\n        energy = slider2_val;                               //energy has a direct relationship to peaceful -> excited\r\n        instrumentalness = slider3_val;                     //distracted -> concentrated meaning vocals in song -> instrumentals. so like study music\r\n        liveness = slider4_val;                             //\r\n        speechiness = (1-slider3_val);                      //\r\n        valence = slider1_val;                              //measure of positivity has a direct relationship to somber -> cheerful\r\n\r\n\r\n        return '/' + acousticness + '/' + danceability + '/' + energy + '/' + instrumentalness + '/' + liveness + '/' + speechiness + '/' + valence;\r\n    }\r\n\r\n\r\n    handleSlider(e, i)\r\n    {\r\n        var tempValues = this.state.values;\r\n        tempValues[i] = e.target.value;\r\n        this.setState({value: tempValues})\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return(\r\n\r\n            <div id=\"background\">\r\n                <div className=\"headingBox\">\r\n                    <h1 className=\"heading\">Spotify Mood Search</h1>\r\n                    <div className=\"headingUnderline\"></div>\r\n                </div>\r\n                <div id=\"inputArea\">\r\n                    <div id=\"inputBox\">\r\n                        <h2 className=\"inputHeading\">I feel...</h2>\r\n                        <div className=\"sliders\"> \r\n                            <Slider leftLabel=\"Somber\" rightLabel=\"Cheerful\" onChange={this.handleSlider.bind(this)} index={0} value={this.state.values[0]}></Slider>\r\n                            <Slider leftLabel=\"Peaceful\" rightLabel=\"Excited\" onChange={this.handleSlider.bind(this)} index={1} value={this.state.values[1]}></Slider>\r\n                            <Slider leftLabel=\"Bored\" rightLabel=\"Busy\" onChange={this.handleSlider.bind(this)} index={2} value={this.state.values[2]}></Slider>\r\n                            <Slider leftLabel=\"Reserved\" rightLabel=\"Intimate\" onChange={this.handleSlider.bind(this)} index={3} value={this.state.values[3]}></Slider>\r\n                        </div>\r\n                        <div onClick={this.search} className={this.state.searching ? \"hidden\" : \"submitBtn\"}>\r\n                            <h4 className=\"submitBtnLabel\">Search</h4>\r\n                        </div>\r\n                        <div className={this.state.searching ? \"loading\" : \"hidden\"}>\r\n                            <Spinner animation=\"border\"></Spinner>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"outputArea\">\r\n                    <div id=\"songOutput\" className=\"outputBox\">\r\n                        <div className=\"outputBoxHeader\">\r\n                            <h1 className=\"outputBoxLabel\">Songs</h1>\r\n                        </div>\r\n                        <div className=\"itemArea\">\r\n                            {\r\n                                this.state.ranked_songs.map((song, index) =>\r\n                                \r\n                                    <RankedItem key={song.songName + \" \" + index} item={song} type=\"song\" className={index===0 ? \"rankedItem first\" : (index===this.state.ranked_songs.length-1 ? \"rankedItem last\" : \"rankedItem middle\")}></RankedItem>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"artistOutput\" className=\"outputBox\">\r\n                        <div className=\"outputBoxHeader\">\r\n                            <h1 className=\"outputBoxLabel\">Artists</h1>\r\n                        </div>\r\n                        <div className=\"itemArea\">\r\n                            {\r\n                                this.state.ranked_artists.map((artist, index) =>\r\n                                \r\n                                    <RankedItem key={artist.artistName + \" \" + index} item={artist} type=\"artist\" className={index===0 ? \"rankedItem first\" : (index===this.state.ranked_artists.length-1 ? \"rankedItem last\" : \"rankedItem middle\")}></RankedItem>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"albumOutput\" className=\"outputBox\">\r\n                        <div className=\"outputBoxHeader\">\r\n                            <h1 className=\"outputBoxLabel\">Albums</h1>\r\n                        </div>\r\n                        <div className=\"itemArea\">\r\n                            {\r\n                                this.state.ranked_albums.map((album, index) => \r\n                                \r\n                                    <RankedItem key={album.albumName + \" \" + album} item={album} type=\"album\" className={index===0 ? \"rankedItem first\" : (index===this.state.ranked_albums.length-1 ? \"rankedItem last\" : \"rankedItem middle\")}></RankedItem>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/app.jsx';\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}